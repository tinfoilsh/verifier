name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set up gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          go get -u golang.org/x/mobile/bind

      - name: gomobile bind
        run: |
          gomobile bind -target=ios,iossimulator,macos -o TinfoilVerifier.xcframework $(go list ./... | grep -v "/examples/" | xargs)
          zip -r TinfoilVerifier.xcframework.zip TinfoilVerifier.xcframework

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: TinfoilVerifier.xcframework.zip

  # notify-downstreams:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   permissions:
  #     contents: read       # reading this repo is enough
  #   steps:
  #     - name: Mint App token
  #       id: app_token
  #       uses: actions/create-github-app-token@v1
  #       with:
  #         app-id: ${{ vars.APP_ID }}
  #         private-key: ${{ secrets.APP_PRIVATE_KEY }}
  #         repositories: tinfoil-go,tinfoil-swift,tinfoil-node,tinfoil-cli,verifier-js

  #     - name: Send repository_dispatch to each consumer
  #       env:
  #         GH_TOKEN: ${{ steps.app_token.outputs.token }}
  #       run: |
  #         tag=${GITHUB_REF##*/}
  #         for repo in tinfoil-go tinfoil-cli; do
  #           gh api repos/"${{ github.repository_owner }}"/$repo/dispatches \
  #             --input - <<EOF
  #         {
  #           "event_type": "verifier_published",
  #           "client_payload": {
  #             "version": "$tag"
  #           }
  #         }
  #         EOF
  #         done
